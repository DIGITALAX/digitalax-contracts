type Day @entity {
  id: ID!
  totalBidValue: BigInt!
  totalWithdrawalValue: BigInt!
  totalNetBidActivity: BigInt!
  totalMarketplaceVolumeInETH: BigInt!
  totalMarketplaceVolumeInMona: BigInt!
}

type DayV2 @entity {
  id: ID!
  totalBidValue: BigInt!
  totalWithdrawalValue: BigInt!
  totalNetBidActivity: BigInt!
  totalMarketplaceVolumeInETH: BigInt!
  totalMarketplaceVolumeInMona: BigInt!
}

type SubscriptionDay @entity {
  id: ID!
  totalMarketplaceVolumeInMona: BigInt!
}

type DripDay @entity {
  id: ID!
  totalMarketplaceVolumeInUSD: BigInt!
}

type PatronDay @entity {
  id: ID!
  totalMarketplaceVolumeInUSD: BigInt!
}

type DigitalaxGarmentNFTGlobalStat @entity {
  id: ID!
  totalSalesValue: BigInt! # Eth value in WEI accross all successful auctions
  totalActiveBidsValue: BigInt! # Eth value of the active aggregate bids across all in flight auctions
  totalMarketplaceSalesInETH: BigInt! # Eth value collected in WEI across all marketplace
  totalMarketplaceSalesInMona: BigInt! # Mona value collected in WEI across all marketplace
}

type DigitalaxGarmentNFTV2GlobalStat @entity {
  id: ID!
  totalSalesValue: BigInt! # Eth value in WEI accross all successful auctions
  totalActiveBidsValue: BigInt! # Eth value of the active aggregate bids across all in flight auctions
  totalMarketplaceSalesInETH: BigInt! # Eth value collected in WEI across all marketplace
  totalMarketplaceSalesInMona: BigInt! # Mona value collected in WEI across all marketplace
  monaPerEth: BigInt! # Mona for every eth in wei
}

type DigitalaxModelGlobalStat @entity {
  id: ID!
  totalSalesValue: BigInt! # Eth value in WEI accross all successful auctions
  totalActiveBidsValue: BigInt! # Eth value of the active aggregate bids across all in flight auctions
  totalMarketplaceSalesInETH: BigInt! # Eth value collected in WEI across all marketplace
  totalMarketplaceSalesInMona: BigInt! # Mona value collected in WEI across all marketplace
  monaPerEth: BigInt! # Mona for every eth in wei
}

type DigitalaxSubscriptionNFTGlobalStat @entity {
  id: ID!
  totalSalesValue: BigInt! # Eth value in WEI accross all successful auctions
  totalMarketplaceSalesInMona: BigInt! # Mona value collected in WEI across all marketplace
}

type DripGlobalStat @entity {
  id: ID!
  totalMarketplaceSalesInUSD: BigInt! # USD value collected in WEI across all marketplace
  usdETHConversion: BigInt! # USD FOR ETH IN WEI
}

type PatronGlobalStat @entity {
  id: ID!
  totalMarketplaceSalesInUSD: BigInt! # USD value collected in WEI across all marketplace
  usdETHConversion: BigInt! # USD FOR ETH IN WEI
}

type DigitalaxGarmentChild @entity {
  id: ID! # {parent-token-id}-{child-token-id}
  parentId: BigInt! # parent token ID
  childId: BigInt! # child token ID
  amount: BigInt!
  contract: Bytes!
  tokenUri: String!
  rarity: String!
}

type DigitalaxGarmentChildV2 @entity {
  id: ID! # {parent-token-id}-{child-token-id}
  parentId: BigInt! # parent token ID
  childId: BigInt! # child token ID
  amount: BigInt!
  contract: Bytes!
  tokenUri: String!
  rarity: String!
}

type DigitalaxGarmentModelChild @entity {
  id: ID! # {parent-token-id}-{child-token-id}
  parentId: BigInt! # parent token ID
  childId: BigInt! # child token ID
  amount: BigInt!
  contract: Bytes!
  tokenUri: String!
  rarity: String!
}

type DigitalaxCollectionGroup @entity {
  id: ID!
  auctions: [DigitalaxGarmentV2Auction!]
  collections: [DigitalaxGarmentV2Collection!]
  digiBundle: DigitalaxGarmentV2Collection
}

type DigitalaxModelCollectionGroup @entity {
  id: ID!
  collections: [DigitalaxModelCollection!]
  digiBundle: DigitalaxModelCollection
}

type PatronCollectionGroup @entity {
  id: ID!
  auctions: [DigitalaxGarmentV2Auction!]
  collections: [DigitalaxGarmentV2Collection!]
  digiBundle: DigitalaxGarmentV2Collection
}

type DigitalaxSubscriptionChild @entity {
  id: ID! # {parent-token-id}-{child-token-id}
  parentId: BigInt! # parent token ID
  childId: BigInt! # child token ID
  amount: BigInt!
  contract: Bytes!
  tokenUri: String!
  rarity: String!
}

type GarmentAttribute @entity {
  id: ID!
  type: String
  value: String
}

type DigitalaxGarment @entity {
  id: ID!
  designer: String!
  owner: Bytes
  primarySalePrice: BigInt!
  tokenUri: String!
  image: String!
  animation: String!
  name: String!
  description: String!
  external: String!
  attributes: [GarmentAttribute!]!
  children: [DigitalaxGarmentChild!]
}

type AdditionalSource @entity {
  id: ID!
  type: String!
  url: String!
}

type DigitalaxGarmentV2 @entity {
  id: ID!
  designer: String!
  owner: Bytes
  primarySalePrice: BigInt!
  tokenUri: String!
  image: String!
  animation: String!
  name: String!
  description: String!
  external: String!
  additionalSources: [AdditionalSource!]
  attributes: [GarmentAttribute!]!
  children: [DigitalaxGarmentChildV2!]
}

type DigitalaxModelNFT @entity {
  id: ID!
  designer: String!
  model: String!
  owner: Bytes!
  primarySalePrice: BigInt!
  tokenUri: String!
  image: String!
  animation: String!
  name: String!
  description: String!
  external: String!
  additionalSources: [AdditionalSource!]
  attributes: [GarmentAttribute!]!
  children: [DigitalaxGarmentModelChild!]!
}

type DigitalaxSubscription @entity {
  id: ID!
  designer: String!
  owner: Bytes
  primarySalePrice: BigInt!
  tokenUri: String!
  image: String!
  animation: String!
  name: String!
  description: String!
  external: String!
  attributes: [GarmentAttribute!]!
  children: [DigitalaxGarmentChild!]
}

# Total support of all children
type DigitalaxMaterial @entity {
  id: ID!
  tokenUri: String!
  totalSupply: BigInt!
  image: String!
  animation: String!
  name: String!
  description: String!
  external: String!
  attributes: [GarmentAttribute!]!
}

# Total support of all children
type DigitalaxMaterialV2 @entity {
  id: ID!
  tokenUri: String!
  totalSupply: BigInt!
  image: String!
  animation: String!
  name: String!
  description: String!
  external: String!
  attributes: [GarmentAttribute!]!
}

type DigitalaxModelMaterial @entity {
  id: ID!
  tokenUri: String!
  totalSupply: BigInt!
  image: String!
  animation: String!
  name: String!
  description: String!
  external: String!
  attributes: [GarmentAttribute!]!
}

type AvatarElemental @entity {
  id: ID!
  tokenUri: String!
  totalSupply: BigInt!
  image: String!
  animation: String!
  name: String!
  description: String!
  external: String!
  attributes: [GarmentAttribute!]!
}

# Total support of all children
type DigitalaxBundle @entity {
  id: ID!
  tokenUri: String!
  totalSupply: BigInt!
  image: String!
  animation: String!
  name: String!
  description: String!
  external: String!
  attributes: [GarmentAttribute!]!
}

type DigitalaxChildOwner @entity {
  id: ID! # {parent-token-id-holder}-{child-token-id}
  childId: BigInt! # the child token ID
  owner: Bytes! # token owner
  amount: BigInt!
  contract: Bytes!
  tokenUri: String!
  token: DigitalaxMaterial!
}

type DigitalaxChildV2Owner @entity {
  id: ID! # {parent-token-id-holder}-{child-token-id}
  childId: BigInt! # the child token ID
  owner: Bytes! # token owner
  amount: BigInt!
  contract: Bytes!
  tokenUri: String!
  token: DigitalaxMaterialV2!
}

type DigitalaxChildModelOwner @entity {
  id: ID! # {parent-token-id-holder}-{child-token-id}
  childId: BigInt! # the child token ID
  owner: Bytes! # token owner
  amount: BigInt!
  contract: Bytes!
  tokenUri: String!
  token: DigitalaxModelMaterial!
}

type DigitalaxBundleOwner @entity {
  id: ID! # {parent-token-id-holder}-{child-token-id}
  childId: BigInt! # the child token ID
  owner: Bytes! # token owner
  amount: BigInt!
  contract: Bytes!
  tokenUri: String!
  token: DigitalaxBundle!
}

type DigitalaxCollector @entity {
  id: ID!
  parentsOwned: [DigitalaxGarment!]! # only parents owned by the
  childrenOwned: [DigitalaxChildOwner!]! # only given children when a parent is burnt
}

type DigitalaxCollectorV2 @entity {
  id: ID!
  parentsOwned: [DigitalaxGarmentV2!]! # only parents owned by the
  childrenOwned: [DigitalaxChildV2Owner!]! # only given children when a parent is burnt
}

type DigitalaxModelCollector @entity {
  id: ID!
  parentsOwned: [DigitalaxModelNFT!]! # only parents owned by the
  childrenOwned: [DigitalaxChildModelOwner!]! # only given children when a parent is burnt
}

type DigitalaxSubscriptionCollector @entity {
  id: ID!
  parentsOwned: [DigitalaxSubscription!]! # only parents owned by the
  childrenOwned: [DigitalaxBundleOwner!]! # only given children when a parent is burnt
}

type DigitalaxGarmentDesigner @entity {
  id: ID!
  garments: [DigitalaxGarment!]!
  listings: [DigitalaxGarmentAuction!]!
  # sold
}

type DigitalaxGarmentV2Designer @entity {
  id: ID!
  garments: [DigitalaxGarmentV2!]!
  listings: [DigitalaxGarmentV2Auction!]!
  # sold
}

type DigitalaxModelNFTDesigner @entity {
  id: ID!
  garments: [DigitalaxModelNFT!]!
  # sold
}

type DigitalaxModelNFTModel @entity {
  id: ID!
  garments: [DigitalaxModelNFT!]!
}

type DigitalaxSubscriptionDesigner @entity {
  id: ID!
  garments: [DigitalaxSubscription!]!
  ## listings: [DigitalaxGarmentAuction!]!
  # sold
}

type DigitalaxAuctionContract @entity {
  ## Global config
  id: ID!
  minBidIncrement: BigInt!
  bidWithdrawalLockTime: BigInt!
  platformFee: BigInt!
  platformFeeRecipient: Bytes!
  ## totals
  totalSales: BigInt!
}

type DigitalaxAuctionV2Contract @entity {
  ## Global config
  id: ID!
  minBidIncrement: BigInt!
  bidWithdrawalLockTime: BigInt!
  platformFee: BigInt!
  platformFeeRecipient: Bytes!
  ## totals
  totalSales: BigInt!
}

type DigitalaxGarmentAuction @entity {
  id: ID!

  ## Auction setup
  reservePrice: BigInt!
  startTime: BigInt!
  endTime: BigInt!
  resulted: Boolean!
  resultedTime: BigInt

  ## Highest bidder
  topBidder: DigitalaxCollector
  topBid: BigInt
  lastBidTime: BigInt

  ## Foreign key link to Garment, designer, history and contract
  garment: DigitalaxGarment!
  designer: DigitalaxGarmentDesigner!
  history: DigitalaxGarmentAuctionHistory!
  contract: DigitalaxAuctionContract!
}

type DigitalaxGarmentV2Auction @entity {
  id: ID!

  ## Auction setup
  reservePrice: BigInt!
  startTime: BigInt!
  endTime: BigInt!
  resulted: Boolean!
  resultedTime: BigInt

  ## Highest bidder
  topBidder: DigitalaxCollectorV2
  topBid: BigInt
  lastBidTime: BigInt

  ## Foreign key link to Garment, designer, history and contract
  garment: DigitalaxGarmentV2!
  designer: DigitalaxDesigner
  developer: DigitalaxDeveloper
  history: DigitalaxGarmentV2AuctionHistory!
  contract: DigitalaxAuctionV2Contract!
}

type DigitalaxGarmentAuctionHistory @entity {
  id: ID!
  token: DigitalaxGarment!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  bidder: DigitalaxCollector
  value: BigInt
}

type DigitalaxGarmentV2AuctionHistory @entity {
  id: ID!
  token: DigitalaxGarmentV2!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  bidder: DigitalaxCollectorV2
  value: BigInt
}

type DigitalaxAccessControlsHistory @entity {
  id: ID!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  beneficiary: Bytes!
  caller: Bytes!
}

type DigitalaxGarmentCollection @entity {
  id: ID!
  garmentAuctionID: BigInt!
  garments: [DigitalaxGarment!]
  rarity: String
  valueSold: BigInt
}

type DigitalaxGarmentV2Collection @entity {
  id: ID!
  garmentAuctionID: BigInt!
  garments: [DigitalaxGarmentV2!]
  rarity: String
  valueSold: BigInt
  designer: DigitalaxDesigner
  developer: DigitalaxDeveloper
}

type DigitalaxModelCollection @entity {
  id: ID!
  garmentAuctionID: BigInt!
  garments: [DigitalaxModelNFT!]!
  rarity: String!
  valueSold: BigInt!
  designer: DigitalaxModelDesigner
  model: DigitalaxModel
  developer: DigitalaxDeveloper
}

type DigitalaxSubscriptionCollection @entity {
  id: ID!
  bundleID: BigInt!
  garments: [DigitalaxSubscription!]!
  rarity: String!
  valueSold: BigInt!
}

type DigitalaxNFTStaker @entity {
  id: ID!
  garments: [DigitalaxGarmentV2!]!
  rewardsClaimed: BigInt!
}

type ModelNFTStaker @entity {
  id: ID!
  garments: [DigitalaxModelNFT!]!
}

type DigitalaxOldNFTStaker @entity {
  id: ID!
  garments: [DigitalaxGarmentV2!]!
  rewardsClaimed: BigInt!
}

type DigitalaxMarketplaceOffer @entity {
  id: ID!
  garmentCollection: DigitalaxGarmentCollection
  primarySalePrice: BigInt
  startTime: BigInt
  amountSold: BigInt
  marketplacePlatformFee: BigInt
  discountToPayMona: BigInt
}

type DigitalaxMarketplaceV2Offer @entity {
  id: ID!
  garmentCollection: DigitalaxGarmentV2Collection
  primarySalePrice: BigInt
  startTime: BigInt
  endTime: BigInt
  amountSold: BigInt
  marketplacePlatformFee: BigInt
  discountToPayMona: BigInt
}

type DigitalaxMarketplaceV3Offer @entity {
  id: ID!
  garmentCollection: DigitalaxGarmentV2Collection
  primarySalePrice: BigInt
  startTime: BigInt
  endTime: BigInt
  amountSold: BigInt
  marketplacePlatformFee: BigInt
  discountToPayMona: BigInt
}

type DigitalaxModelMarketplaceOffer @entity {
  id: ID!
  garmentCollection: DigitalaxModelCollection
  primarySalePrice: BigInt
  startTime: BigInt
  endTime: BigInt
  amountSold: BigInt
  marketplacePlatformFee: BigInt
  discountToPayMona: BigInt
}

type DigitalaxModelMarketplaceV3Offer @entity {
  id: ID!
  garmentCollection: DigitalaxModelCollection
  primarySalePrice: BigInt
  startTime: BigInt
  endTime: BigInt
  amountSold: BigInt
  marketplacePlatformFee: BigInt
  discountToPayMona: BigInt
}

type DigitalaxSubscriptionMarketplaceOffer @entity {
  id: ID!
  subscriptionCollection: DigitalaxSubscriptionCollection
  primarySalePrice: BigInt
  startTime: BigInt
  endTime: BigInt
  amountSold: BigInt
  marketplacePlatformFee: BigInt
  discountToPayMona: BigInt
}

type DripMarketplaceOffer @entity {
  id: ID!
  garmentCollection: DigitalaxGarmentV2Collection
  primarySalePrice: BigInt
  startTime: BigInt
  endTime: BigInt
  amountSold: BigInt
  discountToPayERC20: BigInt
}

type PatronMarketplaceOffer @entity {
  id: ID!
  garmentCollection: DigitalaxGarmentV2Collection
  primarySalePrice: BigInt
  startTime: BigInt
  endTime: BigInt
  amountSold: BigInt
  discountToPayERC20: BigInt
}

type DigitalaxMarketplacePurchaseHistory @entity {
  id: ID!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  token: DigitalaxGarment!
  buyer: Bytes!
  value: BigInt!
  isPaidWithMona: Boolean!
  monaTransferredAmount: BigInt!
  garmentAuctionId: BigInt!
  platformFee: BigInt!
  discountToPayMona: BigInt!
  rarity: String!
}

type DigitalaxMarketplaceV2PurchaseHistory @entity {
  id: ID!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  token: DigitalaxGarmentV2!
  buyer: Bytes!
  value: BigInt!
  isPaidWithMona: Boolean!
  monaTransferredAmount: BigInt!
  garmentAuctionId: BigInt!
  platformFee: BigInt!
  discountToPayMona: BigInt!
  rarity: String!
  monaPerEth: BigInt! # Mona for every eth in wei at the time of the tx
}

type DigitalaxMarketplaceV3PurchaseHistory @entity {
  id: ID!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  token: DigitalaxGarmentV2!
  buyer: Bytes!
  orderId: BigInt
  value: BigInt! # USD Value
  shippingUsd: BigInt!
  paymentTokenTransferredAmount: BigInt!
  paymentToken: Bytes!
  garmentCollectionId: BigInt!
  discountToPayERC20: BigInt!
  platformFee: BigInt!
  rarity: String!
  usdEthExchange: BigInt! # Eth for every USD in wei at the time of the tx
  usdPaymentTokenExchange: BigInt! # Payment Token for every USD in wei at the time of the tx
}

type DigitalaxModelMarketplacePurchaseHistory @entity {
  id: ID!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  token: DigitalaxModelNFT!
  buyer: Bytes!
  value: BigInt!
  isPaidWithMona: Boolean!
  monaTransferredAmount: BigInt!
  garmentAuctionId: BigInt!
  platformFee: BigInt!
  discountToPayMona: BigInt!
  rarity: String!
  monaPerEth: BigInt! # Mona for every eth in wei at the time of the tx
}

type DigitalaxModelMarketplaceV3PurchaseHistory @entity {
  id: ID!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  token: DigitalaxModelNFT!
  orderId: BigInt
  buyer: Bytes!
  value: BigInt!
  isPaidWithMona: Boolean!
  paymentTokenTransferredAmount: BigInt!
  garmentCollectionId: BigInt!
  platformFee: BigInt!
  discountToPayERC20: BigInt!
  rarity: String!
  paymentToken: Bytes!
  monaPerEth: BigInt! # Mona for every eth in wei at the time of the tx
  usdEthExchange: BigInt! # Eth for every USD in wei at the time of the tx
  usdPaymentTokenExchange: BigInt! # Payment Token for every USD in wei at the time of the tx
}

type DigitalaxSubscriptionPurchaseHistory @entity {
  id: ID!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  token: DigitalaxSubscription!
  buyer: Bytes!
  value: BigInt!
  isPaidWithMona: Boolean!
  monaTransferredAmount: BigInt!
  bundleId: BigInt!
  platformFee: BigInt!
  discountToPayMona: BigInt!
  rarity: String!
}

type DripMarketplacePurchaseHistory @entity {
  id: ID!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  token: DigitalaxGarmentV2!
  buyer: Bytes!
  orderId: BigInt!
  value: BigInt! # USD Value
  shippingUsd: BigInt!
  paymentTokenTransferredAmount: BigInt!
  paymentToken: String!
  garmentCollectionId: BigInt!
  discountToPayERC20: BigInt!
  rarity: String!
  usdEthExchange: BigInt! # Eth for every USD in wei at the time of the tx
  usdPaymentTokenExchange: BigInt! # Payment Token for every USD in wei at the time of the tx
}

type PatronMarketplacePurchaseHistory @entity {
  id: ID!
  eventName: String!
  timestamp: BigInt!
  transactionHash: Bytes!
  token: DigitalaxGarmentV2!
  buyer: Bytes!
  orderId: BigInt!
  value: BigInt! # USD Value
  shippingUsd: BigInt!
  paymentTokenTransferredAmount: BigInt!
  paymentToken: String!
  garmentCollectionId: BigInt!
  discountToPayERC20: BigInt!
  rarity: String!
  usdEthExchange: BigInt! # Eth for every USD in wei at the time of the tx
  usdPaymentTokenExchange: BigInt! # Payment Token for every USD in wei at the time of the tx
}

type DigitalaxAuctionIndex @entity {
  id: ID!
  garments: [DigitalaxGarment!]
}

type DigitalaxAuctionV2Index @entity {
  id: ID!
  garments: [DigitalaxGarmentV2!]
}

type DigitalaxDesigner @entity {
  id: ID!
  name: String!
  description: String!
  image: String!
  instagram: String
  twitter: String
  collections: [DigitalaxGarmentV2Collection!]!
  auctions: [DigitalaxGarmentV2Auction!]!
}

type DigitalaxModelDesigner @entity {
  id: ID!
  name: String!
  description: String!
  image: String!
  instagram: String
  twitter: String
  collections: [DigitalaxModelCollection!]!
}

type DigitalaxModel @entity {
  id: ID!
  name: String!
  description: String!
  image: String!
  instagram: String
  twitter: String
  collections: [DigitalaxModelCollection!]!
}

type DigitalaxDeveloper @entity {
  id: ID!
  name: String!
  description: String!
  image: String!
  collections: [DigitalaxGarmentV2Collection!]!
  auctions: [DigitalaxGarmentV2Auction!]!
}

type DigitalaxDesignerV2Index @entity {
  id: ID!
  garments: [DigitalaxGarmentV2!]
  infoUrl: String
}

type DigitalaxSubscriptionDesignerIndex @entity {
  id: ID!
  garments: [DigitalaxSubscription!]
  infoUrl: String
}

type GDNMembershipNFT @entity {
  id: ID!
  owner: Bytes!
  name: String!
  description: String!
  image: String!
  animation: String!
  tokenUri: String!
  attributes: [GarmentAttribute!]!
}

type PayableTokenReport @entity {
  id: ID!
  payload: BigInt!
  timestamp: BigInt!
}

type DigitalaxLookGoldenTicket @entity {
  id: ID!
  name: String!
  owner: Bytes!
  description: String!
  animation: String!
  image: String!
  attributes: [GarmentAttribute!]!
  tokenUri: String!
}

type DigitalaxRewardV2Token @entity {
  id: ID!
  name: String!
  symbol: String!
}

type DigitalaxMonaMarketplaceRevenue @entity {
  id: ID!
  week: BigInt!
  weeklyMonaSharing: BigInt!
  totalMonaSharing: BigInt!
}

type DigitalaxMonaStaking @entity {
  id: ID!
  totalMonaStaked: BigInt!
}

type W3FStakingMarketplaceRevenue @entity {
  id: ID!
  week: BigInt!
  weeklyW3FSharing: BigInt!
  totalW3FSharing: BigInt!
}

type W3FStaking @entity {
  id: ID!
  totalW3FStaked: BigInt!
}

type DigitalaxGenesisV2 @entity {
  id: ID!
  ogHolder: String!
  owner: Bytes!
  primarySalePrice: BigInt!
  tokenUri: String!
  animation: String!
  name: String!
  description: String!
  attributes: [GarmentAttribute!]!
}

type DigitalaxGenesisV2OGHolder @entity {
  id: ID!
  garments: [DigitalaxGenesisV2!]!
}

type DigitalaxGenesisV2Collector @entity {
  id: ID!
  parentsOwned: [DigitalaxGenesisV2!]! # only parents owned by the
}

type DigitalaxGenesisV2Staker @entity {
  id: ID!
  garments: [DigitalaxGenesisV2!]!
  rewardsClaimed: BigInt!
}

type DigitalaxGDNMembershipStaker @entity {
  id: ID!
  garments: [GDNMembershipNFT!]!
  rewardsClaimed: BigInt!
}

type DigitalaxGDNSpecialMembershipStaker @entity {
  id: ID!
  garments: [DigitalaxGarmentV2!]!
  rewardsClaimed: BigInt!
}
